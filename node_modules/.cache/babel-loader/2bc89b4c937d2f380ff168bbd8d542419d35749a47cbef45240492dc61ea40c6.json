{"ast":null,"code":"var _jsxFileName = \"/home/duck/Desktop/projs/my-app/src/components/TokenBlock.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst targetSymbols = ['ETHUSDT', 'SOLUSDT', 'BTCUSDT', 'DOGEUSDT', 'DASHUSDT', 'LTCUSDT'];\nfunction importTokenImage(token) {\n  token = token.replace('USDT', '').toLowerCase();\n  const imagePath = `/images/${token}.png`;\n  return imagePath;\n}\nexport default function TokenBlock() {\n  _s();\n  const [tokensObj, setTokensObj] = useState({});\n  useEffect(() => {\n    const fetchPricesAndChanges = async () => {\n      try {\n        const pricesResponse = await fetch('https://api.binance.com/api/v3/ticker/price');\n        const prices = await pricesResponse.json();\n        const changesResponse = await fetch('https://api.binance.com/api/v3/ticker/24hr');\n        const changes = await changesResponse.json();\n        const newTokensObj = targetSymbols.reduce((acc, symbol) => {\n          const priceData = prices.find(p => p.symbol === symbol);\n          const changeData = changes.find(c => c.symbol === symbol);\n          if (priceData && changeData) {\n            const price = parseFloat(priceData.price).toFixed(2);\n            const percentChange = parseFloat(changeData.priceChangePercent).toFixed(2) + '%';\n            acc[symbol] = [price, percentChange];\n          }\n          return acc;\n        }, {});\n        setTokensObj(newTokensObj);\n      } catch (error) {\n        console.error('Error fetching data from Binance API', error);\n      }\n    };\n    fetchPricesAndChanges();\n    const intervalId = setInterval(fetchPricesAndChanges, 1000);\n    return () => clearInterval(intervalId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-3 w-[680px] gap-2\",\n    children: targetSymbols.map((token, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"crypto-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"                       \", /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"w-10 h-10\",\n          src: importTokenImage(token),\n          alt: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-bold text-2xl\",\n            children: token\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col gap-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"$ \", tokensObj[token] ? tokensObj[token][0] : 'Loading...']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: tokensObj[token] ? parseFloat(tokensObj[token][1]) > 0 ? 'green' : 'red' : 'black'\n            },\n            children: tokensObj[token] ? parseFloat(tokensObj[token][1]) > 0 ? `+${tokensObj[token][1]}` : tokensObj[token][1] : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(TokenBlock, \"P0pDSXx+Xic2oly1D337+STkLF4=\");\n_c = TokenBlock;\nvar _c;\n$RefreshReg$(_c, \"TokenBlock\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","targetSymbols","importTokenImage","token","replace","toLowerCase","imagePath","TokenBlock","_s","tokensObj","setTokensObj","fetchPricesAndChanges","pricesResponse","fetch","prices","json","changesResponse","changes","newTokensObj","reduce","acc","symbol","priceData","find","p","changeData","c","price","parseFloat","toFixed","percentChange","priceChangePercent","error","console","intervalId","setInterval","clearInterval","className","children","map","index","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["/home/duck/Desktop/projs/my-app/src/components/TokenBlock.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport '../index.css';\n\nconst targetSymbols = ['ETHUSDT', 'SOLUSDT', 'BTCUSDT', 'DOGEUSDT', 'DASHUSDT', 'LTCUSDT'];\nfunction importTokenImage(token) {\n    token = token.replace('USDT','').toLowerCase();\n    const imagePath = `/images/${token}.png`; \n    return imagePath;\n  }\n  \n  \nexport default function TokenBlock() {\n  const [tokensObj, setTokensObj] = useState({});\n\n  useEffect(() => {\n    const fetchPricesAndChanges = async () => {\n      try {\n        const pricesResponse = await fetch('https://api.binance.com/api/v3/ticker/price');\n        const prices = await pricesResponse.json();\n        \n        const changesResponse = await fetch('https://api.binance.com/api/v3/ticker/24hr');\n        const changes = await changesResponse.json();\n\n        const newTokensObj = targetSymbols.reduce((acc, symbol) => {\n          const priceData = prices.find(p => p.symbol === symbol);\n          const changeData = changes.find(c => c.symbol === symbol);\n          if (priceData && changeData) {\n            const price = parseFloat(priceData.price).toFixed(2);\n            const percentChange = parseFloat(changeData.priceChangePercent).toFixed(2) + '%';\n            acc[symbol] = [price, percentChange];\n          }\n          return acc;\n        }, {});\n\n        setTokensObj(newTokensObj);\n      } catch (error) {\n        console.error('Error fetching data from Binance API', error);\n      }\n    };\n\n    fetchPricesAndChanges();\n    \n    const intervalId = setInterval(fetchPricesAndChanges, 1000);\n        return () => clearInterval(intervalId);\n  }, []);\n\n  return (\n    <div className='grid grid-cols-3 w-[680px] gap-2'>\n        {targetSymbols.map((token, index) => (\n            <div key={index} className='crypto-block'>\n                <div>                       <img className='w-10 h-10' src={importTokenImage(token)} alt={token} />\n\n</div>\n                <div className='flex flex-col gap-4'>\n                    <div>\n                    <span className='font-bold text-2xl'>{token}</span>\n                    </div>\n                    <div className='flex flex-col gap-3'>\n                    <span>$ {tokensObj[token] ? tokensObj[token][0] : 'Loading...'}</span>\n                    {/* Conditional rendering for price change */}\n                    <span \n                        style={{\n                            color: tokensObj[token] ? (parseFloat(tokensObj[token][1]) > 0 ? 'green' : 'red') : 'black'\n                        }}\n                    >\n                        {tokensObj[token] ? (parseFloat(tokensObj[token][1]) > 0 ? `+${tokensObj[token][1]}` : tokensObj[token][1]) : ''}\n                    </span>\n                </div>  \n     \n                </div>\n            </div>\n        ))}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}